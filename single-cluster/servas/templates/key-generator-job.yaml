apiVersion: v1
kind: ServiceAccount
metadata:
  name: key-generator-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-creator
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: key-generator-secret-creator
subjects:
- kind: ServiceAccount
  name: key-generator-sa
roleRef:
  kind: Role
  name: secret-creator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: servas-key-generator
  labels:
    app: servas
spec:
  template:
    spec:
      serviceAccountName: key-generator-sa
      containers:
      - name: key-generator
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command: ["/bin/sh", "-c"]
        args:
        - |
          APP_KEY=$(php artisan key:generate --show)
          echo "Generated APP_KEY: $APP_KEY"
          cat > /tmp/secret.yaml << EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: servas-key
          type: Opaque
          stringData:
            APP_KEY: "$APP_KEY"
          EOF
          cat /tmp/secret.yaml | curl -X POST -H "Content-Type: application/yaml" -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" -k https://kubernetes.default.svc/api/v1/namespaces/demo-project/secrets -d @-
      restartPolicy: Never
  backoffLimit: 4 