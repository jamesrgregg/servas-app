apiVersion: apps/v1
kind: Deployment
metadata:
  name: servas
  labels:
    app: servas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: servas
  template:
    metadata:
      labels:
        app: servas
    spec:
      serviceAccountName: servas-sa
      initContainers:
        - name: wait-for-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['/bin/sh', '-c']
          args:
            - |
              until nc -z mariadb 3306; do
                echo "Waiting for MariaDB to be ready..."
                sleep 2
              done
        - name: init-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['/bin/sh', '-c']
          args:
            - |
              cd /app
              
              # Check if APP_KEY is available
              if [ -z "$APP_KEY" ]; then
                echo "Error: APP_KEY is not set"
                exit 1
              fi
              
              php artisan config:clear
              php artisan cache:clear
              
              # Run migrations and seed the database
              php artisan migrate --force
          envFrom:
            - configMapRef:
                name: servas-env
          env:
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: servas-key
                  key: APP_KEY
      containers:
        - name: servas
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          envFrom:
            - configMapRef:
                name: servas-env
          env:
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: servas-key
                  key: APP_KEY
          volumeMounts:
            - name: env-file
              mountPath: /app/.env
              subPath: .env
      volumes:
        - name: env-file
          configMap:
            name: servas-env
